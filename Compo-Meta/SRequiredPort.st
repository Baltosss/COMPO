'From Pharo2.0 of 7 March 2013 [Latest update: #20619] on 6 February 2015 at 4:33:07 pm'!SinglePort subclass: #SRequiredPort	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Compo-Meta'!!SRequiredPort methodsFor: 'default-interface' stamp: 'PetrSpacek 12/15/2013 20:27'!cs__connectTo__par01: port	(self primitive_connectTo: port "compo vm primitive call")! !!SRequiredPort methodsFor: 'default-interface' stamp: 'PetrSpacek 12/15/2013 20:27'!cs__invoke__par01: service par02: isDerref	( isDerref ) ifTrue: [ 		^ (((self cs__getPortNamed__par01: (#self)) cs__invoke__par01: (ServiceInvocation selector: #invoke arguments: {(service). (false). } originPort: (self cs__getPortNamed__par01: (#self)) ) par02: false)).	 ] ifFalse: [		^ ((self primitive_invoke: service "compo vm primitive call")).	 ]
.
! !!SRequiredPort methodsFor: 'compo-private' stamp: 'PetrSpacek 11/25/2013 03:09'!primitive_connectTo: port	|cP|	cP := (ports at: #connectedPorts).	cP cs__connectTo__par01: port.! !!SRequiredPort methodsFor: 'compo-private' stamp: 'LucasNElaupe 2/6/2015 16:21'!primitive_invoke: serviceinv	"CREATED BY Lucas Nelaupe"	|cP aPort result|	cP := ((ports at: #connectedPorts) instVarNamed: #connectedPorts).	(cP size = 0) ifTrue: [ self error: 'Port is not connected' ].	result := (cP at: 1) cs__invoke__par01: serviceinv par02: false.		aPort := AtomicPort newNamed: '?' owner: owner role: #required visibility: #internal interface: '' isCollectionPort: false.	aPort connectTo_port: ((cP at: 1) cs__invoke__par01: serviceinv par02: false).		(result isKindOf: SProvidedPort) ifTrue: 	[  		Transcript crShow: 'True'.		^aPort. 	]	ifFalse: [		(result isKindOf: SRequiredPort) 		ifFalse:		[			(result isKindOf: AtomicPort ) ifTrue: 			[				(result role == #provided) ifTrue: 				[ 					^aPort.				]			]		]	 ].	^result.! !