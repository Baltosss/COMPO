'From Pharo2.0 of 7 March 2013 [Latest update: #20619] on 13 February 2015 at 1:16:45 pm'!SinglePort subclass: #SRequiredPort	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Compo-Meta'!!SRequiredPort methodsFor: 'default-interface' stamp: 'PetrSpacek 12/15/2013 20:27'!cs__connectTo__par01: port	(self primitive_connectTo: port "compo vm primitive call")! !!SRequiredPort methodsFor: 'default-interface' stamp: 'PetrSpacek 12/15/2013 20:27'!cs__invoke__par01: service par02: isDerref	( isDerref ) ifTrue: [ 		^ (((self cs__getPortNamed__par01: (#self)) cs__invoke__par01: (ServiceInvocation selector: #invoke arguments: {(service). (false). } originPort: (self cs__getPortNamed__par01: (#self)) ) par02: false)).	 ] ifFalse: [		^ ((self primitive_invoke: service "compo vm primitive call")).	 ]
.
! !!SRequiredPort methodsFor: 'compo-private' stamp: 'Fred 2/13/2015 13:11'!primitive_connectTo: port	| cP targetName selfName targetPort |	targetPort := port.	(port isKindOf: AtomicPort) ifTrue: [ 		| portName |		portName := port instVarNamed: #name.		(portName compare: '?') == 2 ifTrue: [ 			targetPort := (port instVarNamed: #connectedPorts) at: 1.		]	].	 ((targetPort isKindOf: Port) | (targetPort isKindOf: AtomicPort)) ifTrue: [ 		(self isInterfaceCompatibleWith: targetPort) ifFalse: [			targetName := (((((targetPort instVarNamed: #ports) at: #name) instVarNamed: #connectedPorts) at: 1) instVarNamed: #owner) asString.			selfName := (((((self instVarNamed: #ports) at: #name) instVarNamed: #connectedPorts) at: 1) instVarNamed: #owner) asString.			self error: 'Incompatible interfaces between ',selfName, ' and ', targetName.		]. 	].	cP := (ports at: #connectedPorts).	cP cs__disconnect.	cP cs__connectTo__par01: targetPort.! !!SRequiredPort methodsFor: 'compo-private' stamp: 'Fred 2/13/2015 12:44'!primitive_invoke: serviceinv	"|cP|	cP := ((ports at: #connectedPorts) instVarNamed: #connectedPorts).	(cP size = 0) ifTrue: [ self error: 'Port is not connected' ].	^ (cP at: 1) cs__invoke__par01: serviceinv par02: false."				"CREATED BY Lucas Nelaupe"	|cP aPort result|	cP := ((ports at: #connectedPorts) instVarNamed: #connectedPorts).	(cP size = 0) ifTrue: [ self error: 'Port is not connected' ].	result := (cP at: 1) cs__invoke__par01: serviceinv par02: false.		aPort := AtomicPort newNamed: '?' owner: owner role: #required visibility: #internal interface: #* isCollectionPort: false.	aPort connectTo_port: result.		(result isKindOf: SProvidedPort) 		ifTrue: [ ^aPort. ]	ifFalse: [		(result isKindOf: SRequiredPort) 			ifFalse: [				(result isKindOf: AtomicPort ) 					ifTrue: [ (result role == #provided) ifTrue: [ ^aPort. ] ]		]	 ].	^result.! !