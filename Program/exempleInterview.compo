Descriptor InterviewExample extends Component
{
}

Descriptor Interviewer extends InterviewExample
{
	provides {
		default: { interview(); setChatter(person); getChatter();};
	}
	internally requires {
		chatter : {chat();};
	}
	operation setChatter(person) {
		connect chatter@self to person;
	}
	operation getChatter() {
		return chatter;
	}
	operation interview() {
		Transcript.crShow('Hello, what do you think?');
		Transcript.crShow(chatter.chat());
	}
}

Descriptor Cameraman extends InterviewExample
{
	provides {
		default: { listen(); getChatter(); setChatter(person); };
	}
	internally requires {
		chatter : { chat(); };
	}
	operation getChatter() {
		return chatter;
	}
	operation setChatter(person) {
		connect  chatter@self to person;
	}
	operation listen() {
		Transcript.crShow('The cameraman is listening...');
		Transcript.crShow(chatter.chat());
	}
}

Descriptor Program extends InterviewExample
{
	provides {
		default: {main();}
	}
	internally requires {
		interviewer : { interview(); setChatter(person); getChatter();};
		cameraman : { listen(); setChatter(person); getChatter();};
		sadPerson : {chat();};
		expressivePerson : {chat();};
	}
	architecture {
		connect interviewer@self to default@(Interviewer.new());
		connect cameraman@self to default@(Cameraman.new());
		connect sadPerson@self to iChatty@(SadPerson.new());
		connect expressivePerson@self to iChatty@(ExpressivePerson.new());
	}
	operation main() {
		interviewer.setChatter(sadPerson);
		cameraman.setChatter(interviewer.getChatter());
		interviewer.interview();
		cameraman.listen();
		interviewer.setChatter(expressivePerson);
		interviewer.interview();
		cameraman.listen();
	}
}

Descriptor ExpressivePerson extends InterviewExample
{
	provides {
		iChatty : { chat(); };
	}
	operation chat() {
		return 'Im an expressive person';
	}
}

Descriptor SadPerson extends InterviewExample
{
	provides {
		iChatty : { chat(); };
	}
	operation chat() {
		return 'Im a sad person';
	}
}
